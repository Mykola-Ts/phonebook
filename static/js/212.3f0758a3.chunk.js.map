{"version":3,"file":"static/js/212.3f0758a3.chunk.js","mappings":"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","sources":["components/Forms/Form.styled.js","components/Section/Section.jsx","components/ShowPasswordBtn/ShowPasswordBtn.styled.js","components/ShowPasswordBtn/ShowPasswordBtn.jsx","components/Forms/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Field } from 'formik';\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { BsTelephone } from 'react-icons/bs';\n\nconst FieldWithRef = React.forwardRef((props, ref) => (\n  <Field innerRef={ref} {...props} />\n));\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: 28px;\n\n  font-weight: 700;\n\n  cursor: pointer;\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n\n  color: currentColor;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:has(input:focus) {\n    color: var(--blue-color);\n  }\n`;\n\nexport const StyledInput = styled(FieldWithRef)`\n  display: block;\n\n  width: 100%;\n  border: 1px solid var(--text-black-color);\n  border-radius: 8px;\n  padding: 8px 16px 8px 32px;\n  margin-top: 8px;\n\n  outline: 2px solid transparent;\n\n  transition: border-color var(--transition-duration)\n      var(--transition-timing-function),\n    outline-color var(--transition-duration) var(--transition-timing-function);\n\n  &:focus {\n    border-color: transparent;\n    outline-color: var(--blue-color);\n  }\n\n  & + svg {\n    cursor: text;\n  }\n`;\n\nexport const NameInputIcon = styled(AiOutlineUser)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const EmailInputIcon = styled(AiOutlineMail)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const PasswordInputIcon = styled(RiLockPasswordLine)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const NumberInputIcon = styled(BsTelephone)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const Error = styled.p`\n  padding: 4px;\n\n  font-weight: 500;\n\n  color: var(--error-color);\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ToggleShowPasswordBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 8px;\n  transform: translateY(-50%);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 24px;\n  height: 24px;\n  border: none;\n  padding: 0;\n\n  color: var(--text-black-color);\n  background-color: transparent;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n    color: var(--blue-color);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { FaRegEye } from 'react-icons/fa';\nimport { FaRegEyeSlash } from 'react-icons/fa6';\nimport { ToggleShowPasswordBtn } from './ShowPasswordBtn.styled';\n\nexport const ShowPasswordBtn = ({ inputRef }) => {\n  const [isShowPassword, setIsShowPassword] = useState(false);\n\n  const onToggleShowPassword = () => {\n    if (!inputRef) return;\n\n    const input = inputRef.current;\n\n    input.type = input.type === 'password' ? 'text' : 'password';\n\n    setIsShowPassword(prev => !prev);\n  };\n\n  return (\n    <ToggleShowPasswordBtn type=\"button\" onClick={onToggleShowPassword}>\n      {isShowPassword ? <FaRegEye size={20} /> : <FaRegEyeSlash size={20} />}\n    </ToggleShowPasswordBtn>\n  );\n};\n\nShowPasswordBtn.propTypes = {\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n};\n","import { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ErrorMessage, Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { toast } from 'react-hot-toast';\nimport { userLogIn } from 'redux/auth/operations';\nimport { defaultErrorText } from 'helpers/helpers';\nimport { ShowPasswordBtn } from 'components/ShowPasswordBtn/ShowPasswordBtn';\nimport {\n  EmailInputIcon,\n  Error,\n  Label,\n  PasswordInputIcon,\n  StyledInput,\n  WrapperInput,\n} from 'components/Forms/Form.styled';\nimport { PrimaryButton } from 'components/PrimaryButton/PrimaryButton.styled';\n\nconst loginSchema = object({\n  email: string()\n    .required('This field is required!')\n    .email('Must be a valid email!')\n    .matches(\n      /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n      'Must be a valid email!'\n    ),\n  password: string()\n    .required('This field is required!')\n    .min(\n      7,\n      'The password is short! Please enter a password with at least 7 characters.'\n    )\n    .max(\n      18,\n      'The password is long! Please enter a password with at more 18 characters.'\n    ),\n});\nconst loginErrorText = 'An incorrect username or password has been submitted.';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [errorText, setErrorText] = useState('');\n  const passwordInputRef = useRef(null);\n\n  const onSubmit = ({ email, password }, { resetForm }) => {\n    const credentials = {\n      email,\n      password,\n    };\n\n    dispatch(userLogIn(credentials))\n      .unwrap()\n      .then(({ user }) => {\n        toast.success(`Welcome, ${user.name}!`);\n\n        resetForm();\n      })\n      .catch(err => {\n        if (err === 'Request failed with status code 400') {\n          toast.error(loginErrorText);\n          setErrorText(loginErrorText);\n        } else {\n          toast.error(defaultErrorText);\n          setErrorText(defaultErrorText);\n        }\n      });\n  };\n\n  const onInput = () => {\n    setErrorText('');\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={onSubmit}\n        validationSchema={loginSchema}\n      >\n        <Form>\n          <Label>\n            Email\n            <WrapperInput>\n              <StyledInput\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"user@mail.com\"\n                onInput={onInput}\n              />\n              <EmailInputIcon size={18} />\n            </WrapperInput>\n            <ErrorMessage name=\"email\" component={Error} />\n          </Label>\n\n          <Label>\n            Password\n            <WrapperInput>\n              <StyledInput\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password123\"\n                ref={passwordInputRef}\n                onInput={onInput}\n              />\n\n              <PasswordInputIcon size={18} />\n              <ShowPasswordBtn inputRef={passwordInputRef} />\n            </WrapperInput>\n            <ErrorMessage name=\"password\" component={Error} />\n          </Label>\n\n          {errorText && (\n            <Error style={{ marginBottom: '28px', textAlign: 'center' }}>\n              {errorText}\n            </Error>\n          )}\n\n          <PrimaryButton type=\"submit\" className=\"centered-btn\">\n            Sign in\n          </PrimaryButton>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { LoginForm } from 'components/Forms/LoginForm';\nimport { Section } from 'components/Section/Section';\n\nconst Login = () => {\n  return (\n    <main>\n      <Section title=\"Login\">\n        <LoginForm />\n      </Section>\n    </main>\n  );\n};\n\nexport default Login;\n"],"names":["FieldWithRef","React","props","ref","innerRef","Label","styled","WrapperInput","StyledInput","NameInputIcon","AiOutlineUser","EmailInputIcon","AiOutlineMail","PasswordInputIcon","RiLockPasswordLine","NumberInputIcon","BsTelephone","Error","Section","title","children","ToggleShowPasswordBtn","ShowPasswordBtn","inputRef","useState","isShowPassword","setIsShowPassword","type","onClick","input","current","prev","size","loginSchema","object","email","string","required","matches","password","min","max","loginErrorText","LoginForm","dispatch","useDispatch","errorText","setErrorText","passwordInputRef","useRef","onInput","initialValues","onSubmit","resetForm","credentials","userLogIn","unwrap","then","user","toast","name","catch","err","defaultErrorText","validationSchema","placeholder","component","style","marginBottom","textAlign","className"],"sourceRoot":""}