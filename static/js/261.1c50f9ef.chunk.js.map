{"version":3,"file":"static/js/261.1c50f9ef.chunk.js","mappings":"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","sources":["components/Forms/Form.styled.js","components/Section/Section.jsx","components/Section/Section.styled.js","hooks/useContacts.js","components/Forms/AddContactForm.jsx","pages/Home.jsx","redux/contacts/selectors.js","redux/filter/selectors.js","redux/sort/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { BsTelephone } from 'react-icons/bs';\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: 28px;\n\n  font-weight: 700;\n\n  cursor: pointer;\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n\n  color: currentColor;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:has(input:focus) {\n    color: var(--blue-color);\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n\n  width: 100%;\n  border: 1px solid var(--text-black-color);\n  border-radius: 8px;\n  padding: 8px 16px 8px 32px;\n  margin-top: 8px;\n\n  outline: 2px solid transparent;\n\n  transition: border-color var(--transition-duration)\n      var(--transition-timing-function),\n    outline-color var(--transition-duration) var(--transition-timing-function);\n\n  &:focus {\n    border-color: transparent;\n    outline-color: var(--blue-color);\n  }\n\n  & + svg {\n    cursor: text;\n  }\n`;\n\nexport const NameInputIcon = styled(AiOutlineUser)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const EmailInputIcon = styled(AiOutlineMail)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const PasswordInputIcon = styled(RiLockPasswordLine)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const NumberInputIcon = styled(BsTelephone)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const Error = styled.p`\n  padding: 4px;\n\n  font-weight: 500;\n\n  color: var(--error-color);\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  padding: 40px 20px;\n\n  background-color: var(--white-color);\n  box-shadow: var(--box-shadow);\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 28px;\n\n  text-align: center;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.96px;\n  text-transform: uppercase;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n\n  return contacts;\n};\n\nexport const useVisibleContacts = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return visibleContacts;\n};\n","import { lazy, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { toast } from 'react-hot-toast';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { useContacts } from 'hooks/useContacts';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  contactSchema,\n  defaultErrorText,\n  isIncludesContact,\n} from 'helpers/helpers';\nimport {\n  Error,\n  Label,\n  NameInputIcon,\n  NumberInputIcon,\n  StyledInput,\n  WrapperInput,\n} from './Form.styled';\nimport { PrimaryButton } from 'components/PrimaryButton/PrimaryButton.styled';\n\nconst AddContactSuccessModal = lazy(() =>\n  import('../AddContactSuccessModal/AddContactSuccessModal')\n);\n\nconst body = document.body;\n\nexport const AddContactForm = () => {\n  const contacts = useContacts();\n  const dispatch = useDispatch();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [errorText, setErrorText] = useState('');\n\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    const isExistContact = isIncludesContact(contacts, name, number);\n\n    if (isExistContact) {\n      setErrorText(isExistContact);\n\n      return;\n    }\n\n    dispatch(addContact({ name, number }))\n      .unwrap()\n      .then(resp => {\n        toast.remove();\n        toast.success(`${name} added to contacts`);\n\n        setModalIsOpen(true);\n        body.style.overflow = 'hidden';\n      })\n      .catch(error => {\n        toast.remove();\n        toast.error(defaultErrorText);\n      });\n\n    resetForm();\n  };\n\n  const onInput = () => {\n    setErrorText('');\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    body.style.overflow = '';\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        onSubmit={onSubmit}\n        validationSchema={contactSchema}\n      >\n        <Form>\n          <Label>\n            Name\n            <WrapperInput>\n              <StyledInput\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"First name Last name\"\n                onInput={onInput}\n              />\n              <NameInputIcon size={18} />\n            </WrapperInput>\n            <ErrorMessage name=\"name\" component={Error} />\n          </Label>\n\n          <Label>\n            Number\n            <WrapperInput>\n              <StyledInput\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"000-00-00\"\n                onInput={onInput}\n              />\n              <NumberInputIcon />\n            </WrapperInput>\n            <ErrorMessage name=\"number\" component={Error} />\n          </Label>\n\n          {errorText && (\n            <Error style={{ marginBottom: '28px', textAlign: 'center' }}>\n              {errorText}\n            </Error>\n          )}\n\n          <PrimaryButton type=\"submit\" className=\"centered-btn\">\n            <IoMdPersonAdd size={20} />\n            Add contact\n          </PrimaryButton>\n        </Form>\n      </Formik>\n\n      <AddContactSuccessModal\n        modalIsOpen={modalIsOpen}\n        closeModal={closeModal}\n      />\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Section } from 'components/Section/Section';\nimport { AddContactForm } from 'components/Forms/AddContactForm';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <main>\n      <Section title=\"Add contact\">\n        <AddContactForm />\n      </Section>\n\n      {isLoading && <Loader text=\"Loading data, please wait...\" />}\n    </main>\n  );\n};\n\nexport default Home;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { selectSortValue } from 'redux/sort/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue, selectSortValue],\n  (contacts, filter, sort) => {\n    return contacts\n      .filter(\n        contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n          contact.number.includes(filter)\n      )\n      .sort((a, b) =>\n        sort.sortOrderValue === 'asc'\n          ? a[sort.sortByValue].localeCompare(b[sort.sortByValue])\n          : b[sort.sortByValue].localeCompare(a[sort.sortByValue])\n      );\n  }\n);\n","export const selectFilterValue = state => state.filter.value;\n","export const selectSortValue = state => state.sort.value;\n"],"names":["Label","styled","WrapperInput","StyledInput","Field","NameInputIcon","AiOutlineUser","EmailInputIcon","AiOutlineMail","PasswordInputIcon","RiLockPasswordLine","NumberInputIcon","BsTelephone","Error","Section","title","children","Wrapper","Title","useContacts","useSelector","selectContacts","useVisibleContacts","selectVisibleContacts","AddContactSuccessModal","lazy","body","document","AddContactForm","contacts","dispatch","useDispatch","useState","modalIsOpen","setModalIsOpen","errorText","setErrorText","onInput","initialValues","name","number","onSubmit","resetForm","isExistContact","isIncludesContact","addContact","unwrap","then","resp","toast","style","overflow","catch","error","defaultErrorText","validationSchema","contactSchema","type","placeholder","size","component","marginBottom","textAlign","className","closeModal","isLoading","selectIsLoading","Loader","text","state","items","selectError","createSelector","selectFilterValue","selectSortValue","filter","sort","contact","toLowerCase","includes","a","b","sortOrderValue","sortByValue","localeCompare","value"],"sourceRoot":""}