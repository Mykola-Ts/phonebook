"use strict";(self.webpackChunkphonebook=self.webpackChunkphonebook||[]).push([[348],{4373:function(n,t,e){e.d(t,{M0G:function(){return i},OId:function(){return u},Vmf:function(){return o}});var r=e(9983);function u(n){return(0,r.w_)({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256 294.1L383 167c9.4-9.4 24.6-9.4 33.9 0s9.3 24.6 0 34L273 345c-9.1 9.1-23.7 9.3-33.1.7L95 201.1c-4.7-4.7-7-10.9-7-17s2.3-12.3 7-17c9.4-9.4 24.6-9.4 33.9 0l127.1 127z"}}]})(n)}function o(n){return(0,r.w_)({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256 217.9L383 345c9.4 9.4 24.6 9.4 33.9 0 9.4-9.4 9.3-24.6 0-34L273 167c-9.1-9.1-23.7-9.3-33.1-.7L95 310.9c-4.7 4.7-7 10.9-7 17s2.3 12.3 7 17c9.4 9.4 24.6 9.4 33.9 0l127.1-127z"}}]})(n)}function i(n){return(0,r.w_)({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M304 256c52.805 0 96-43.201 96-96s-43.195-96-96-96-96 43.201-96 96 43.195 96 96 96zm0 48c-63.598 0-192 32.402-192 96v48h384v-48c0-63.598-128.402-96-192-96zM112 224v-64H80v64H16v32h64v64h32v-64h64v-32h-64z"}}]})(n)}},6916:function(n,t,e){e.d(t,{P1:function(){return a}});var r="NOT_FOUND";var u=function(n,t){return n===t};function o(n,t){var e="object"===typeof t?t:{equalityCheck:t},o=e.equalityCheck,i=void 0===o?u:o,c=e.maxSize,a=void 0===c?1:c,f=e.resultEqualityCheck,l=function(n){return function(t,e){if(null===t||null===e||t.length!==e.length)return!1;for(var r=t.length,u=0;u<r;u++)if(!n(t[u],e[u]))return!1;return!0}}(i),v=1===a?function(n){var t;return{get:function(e){return t&&n(t.key,e)?t.value:r},put:function(n,e){t={key:n,value:e}},getEntries:function(){return t?[t]:[]},clear:function(){t=void 0}}}(l):function(n,t){var e=[];function u(n){var u=e.findIndex((function(e){return t(n,e.key)}));if(u>-1){var o=e[u];return u>0&&(e.splice(u,1),e.unshift(o)),o.value}return r}return{get:u,put:function(t,o){u(t)===r&&(e.unshift({key:t,value:o}),e.length>n&&e.pop())},getEntries:function(){return e},clear:function(){e=[]}}}(a,l);function p(){var t=v.get(arguments);if(t===r){if(t=n.apply(null,arguments),f){var e=v.getEntries(),u=e.find((function(n){return f(n.value,t)}));u&&(t=u.value)}v.put(arguments,t)}return t}return p.clearCache=function(){return v.clear()},p}function i(n){var t=Array.isArray(n[0])?n[0]:n;if(!t.every((function(n){return"function"===typeof n}))){var e=t.map((function(n){return"function"===typeof n?"function "+(n.name||"unnamed")+"()":typeof n})).join(", ");throw new Error("createSelector expects all input-selectors to be functions, but received the following types: ["+e+"]")}return t}function c(n){for(var t=arguments.length,e=new Array(t>1?t-1:0),r=1;r<t;r++)e[r-1]=arguments[r];var u=function(){for(var t=arguments.length,r=new Array(t),u=0;u<t;u++)r[u]=arguments[u];var o,c=0,a={memoizeOptions:void 0},f=r.pop();if("object"===typeof f&&(a=f,f=r.pop()),"function"!==typeof f)throw new Error("createSelector expects an output function after the inputs, but received: ["+typeof f+"]");var l=a,v=l.memoizeOptions,p=void 0===v?e:v,s=Array.isArray(p)?p:[p],h=i(r),y=n.apply(void 0,[function(){return c++,f.apply(null,arguments)}].concat(s)),d=n((function(){for(var n=[],t=h.length,e=0;e<t;e++)n.push(h[e].apply(null,arguments));return o=y.apply(null,n)}));return Object.assign(d,{resultFunc:f,memoizedResultFunc:y,dependencies:h,lastResult:function(){return o},recomputations:function(){return c},resetRecomputations:function(){return c=0}}),d};return u}var a=c(o)}}]);
//# sourceMappingURL=348.5ba5ce20.chunk.js.map