{"version":3,"file":"static/js/412.22ac8b4a.chunk.js","mappings":"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","sources":["components/Forms/Form.styled.js","components/ModalWindows/ModalWindow.jsx","components/ModalWindows/ModalWindow.styled.js","components/Section/Section.jsx","components/Section/Section.styled.js","hooks/useContacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Forms/EditContactForm.jsx","components/ModalWindows/DeleteModalWindow.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Error/Error.styled.js","components/Error/Error.jsx","pages/Contacts.styled.js","pages/Contacts.jsx","redux/contacts/selectors.js","redux/filter/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { BsTelephone } from 'react-icons/bs';\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: 28px;\n\n  font-weight: 700;\n\n  cursor: pointer;\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n\n  color: currentColor;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:has(input:focus) {\n    color: var(--blue-color);\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n\n  width: 100%;\n  border: 1px solid var(--text-black-color);\n  border-radius: 8px;\n  padding: 8px 16px 8px 32px;\n  margin-top: 8px;\n\n  outline: 2px solid transparent;\n\n  transition: border-color var(--transition-duration)\n      var(--transition-timing-function),\n    outline-color var(--transition-duration) var(--transition-timing-function);\n\n  &:focus {\n    border-color: transparent;\n    outline-color: var(--blue-color);\n  }\n\n  & + svg {\n    cursor: text;\n  }\n`;\n\nexport const NameInputIcon = styled(AiOutlineUser)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const EmailInputIcon = styled(AiOutlineMail)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const PasswordInputIcon = styled(RiLockPasswordLine)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const NumberInputIcon = styled(BsTelephone)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const Error = styled.p`\n  padding: 4px;\n\n  font-weight: 500;\n\n  color: var(--error-color);\n`;\n","import Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { CloseBtn } from './ModalWindow.styled';\n\nModal.setAppElement('#root');\n\nconst customModalStyles = {\n  overlay: {\n    backgroundColor: 'rgba(255, 255, 255, 0.85)',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    width: 'calc(100% - 30px)',\n    maxWidth: '600px',\n    minHeight: '160px',\n    padding: '32px 20px',\n    marginRight: '-50%',\n    boxShadow: 'var(--box-shadow)',\n  },\n};\n\nexport const ModalWindow = ({ children, closeModal, modalIsOpen }) => {\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customModalStyles}\n      contentLabel=\"Contact Modal\"\n    >\n      {children}\n\n      <CloseBtn onClick={closeModal}>\n        <AiOutlineClose />\n      </CloseBtn>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  closeModal: PropTypes.func.isRequired,\n  modalIsOpen: PropTypes.bool.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  transform: scale(1);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: 1px solid transparent;\n  border-radius: 50px;\n  padding: 0;\n\n  background-color: transparent;\n\n  transition: transform var(--transition-duration)\n      var(--transition-timing-function),\n    color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n    transform: scale(1.15);\n\n    color: var(--blue-color);\n  }\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 24px;\n\n  @media screen and (max-width: 439px) {\n    flex-direction: column;\n    gap: 12px;\n\n    width: fit-content;\n    margin: 0 auto;\n\n    & button {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalText = styled.p`\n  margin-bottom: 24px;\n\n  text-align: center;\n  font-size: 18px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  padding: 40px 20px;\n\n  background-color: var(--white-color);\n  box-shadow: var(--box-shadow);\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 28px;\n\n  text-align: center;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.96px;\n  text-transform: uppercase;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n\n  return contacts;\n};\n\nexport const useVisibleContacts = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return visibleContacts;\n};\n","import styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const WrapperInput = styled.div`\n  position: relative;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n\n  width: 100%;\n  border: 1px solid var(--text-black-color);\n  border-radius: 8px;\n  padding: 8px 32px;\n  margin-top: 8px;\n\n  outline: 2px solid transparent;\n\n  transition: border-color var(--transition-duration)\n      var(--transition-timing-function),\n    outline-color var(--transition-duration) var(--transition-timing-function);\n\n  &:focus {\n    border-color: transparent;\n    outline-color: var(--blue-color);\n  }\n\n  &:focus + svg {\n    fill: var(--blue-color);\n  }\n`;\n\nexport const SearchIcon = styled(BsSearch)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n\n  cursor: text;\n`;\n\nexport const ResetBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 8px;\n  transform: translateY(-50%);\n\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  border: none;\n\n  color: var(--black-color);\n  background-color: transparent;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus) {\n    color: var(--blue-color);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { filterContacts } from 'redux/filter/slice';\nimport {\n  FilterInput,\n  SearchIcon,\n  WrapperInput,\n  ResetBtn,\n} from './Filter.styled';\nimport { Label } from 'components/Forms/Form.styled';\nimport { useEffect } from 'react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  useEffect(() => {\n    dispatch(filterContacts(''));\n  }, [dispatch]);\n\n  const onChange = evt => {\n    const value = evt.currentTarget.value.trim();\n\n    dispatch(filterContacts(value));\n  };\n\n  const onReset = evt => {\n    const label = evt.currentTarget.closest('label');\n    label.control.value = '';\n\n    dispatch(filterContacts(''));\n  };\n\n  return (\n    <>\n      <Label>\n        Find contact by name or number\n        <WrapperInput>\n          <FilterInput\n            type=\"text\"\n            value={filter}\n            placeholder=\"Name or number\"\n            onChange={onChange}\n          />\n          <SearchIcon />\n\n          {filter && (\n            <ResetBtn type=\"button\" onClick={onReset}>\n              <AiOutlineClose />\n            </ResetBtn>\n          )}\n        </WrapperInput>\n      </Label>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { ErrorMessage, Form, Formik } from 'formik';\nimport { toast } from 'react-hot-toast';\nimport { BiSave } from 'react-icons/bi';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { useContacts } from 'hooks/useContacts';\nimport {\n  contactSchema,\n  defaultErrorText,\n  isIncludesContact,\n} from 'helpers/helpers';\nimport { editContact } from 'redux/contacts/operations';\nimport {\n  Error,\n  Label,\n  NameInputIcon,\n  NumberInputIcon,\n  StyledInput,\n  WrapperInput,\n} from './Form.styled';\nimport { PrimaryButton } from 'components/PrimaryButton/PrimaryButton.styled';\nimport { ButtonsWrap } from 'components/ModalWindows/ModalWindow.styled';\n\nexport const EditContactForm = ({ contact, closeModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n  const { id, name, number } = contact;\n\n  const onSubmit = values => {\n    const allContactsExceptEdited = contacts.filter(\n      contact => contact.name !== name && contact.number !== number\n    );\n\n    if (\n      isIncludesContact(allContactsExceptEdited, values.name, values.number)\n    ) {\n      return;\n    }\n\n    dispatch(\n      editContact({\n        id,\n        editedContact: values,\n      })\n    )\n      .unwrap()\n      .then(resp => {\n        toast.remove();\n        toast.success(`Contact ${name} successfully changed.`);\n      })\n      .catch(error => {\n        toast.remove();\n        toast.error(defaultErrorText);\n      });\n\n    closeModal();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name, number }}\n      onSubmit={onSubmit}\n      validationSchema={contactSchema}\n    >\n      <Form>\n        <Label>\n          Name\n          <WrapperInput>\n            <StyledInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"First name Last name\"\n            />\n            <NameInputIcon size={18} />\n          </WrapperInput>\n          <ErrorMessage name=\"name\" component={Error} />\n        </Label>\n\n        <Label>\n          Number\n          <WrapperInput>\n            <StyledInput type=\"tel\" name=\"number\" placeholder=\"000-00-00\" />\n            <NumberInputIcon />\n          </WrapperInput>\n          <ErrorMessage name=\"number\" component={Error} />\n        </Label>\n\n        <ButtonsWrap>\n          <PrimaryButton\n            type=\"button\"\n            className=\"cancel-primary-btn\"\n            onClick={() => closeModal()}\n          >\n            <AiOutlineClose size={20} />\n            Cancel changes\n          </PrimaryButton>\n          <PrimaryButton type=\"submit\">\n            <BiSave size={20} />\n            Save changes\n          </PrimaryButton>\n        </ButtonsWrap>\n      </Form>\n    </Formik>\n  );\n};\n\nEditContactForm.propTypes = {\n  contact: PropTypes.object.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { GoTrash } from 'react-icons/go';\nimport { ModalWindow } from './ModalWindow';\nimport { ButtonsWrap, ModalText } from './ModalWindow.styled';\nimport { PrimaryButton } from 'components/PrimaryButton/PrimaryButton.styled';\nimport { Title } from 'components/Section/Section.styled';\n\nexport const DeleteModalWindow = ({\n  title,\n  modalText,\n  isOpen,\n  closeModal,\n  onDelete,\n}) => {\n  return (\n    <ModalWindow closeModal={closeModal} modalIsOpen={isOpen}>\n      {title && <Title>{title}</Title>}\n      <ModalText>{modalText}</ModalText>\n\n      <ButtonsWrap>\n        <PrimaryButton type=\"button\" onClick={closeModal}>\n          <AiOutlineClose size={20} />\n          Cancel\n        </PrimaryButton>\n\n        <PrimaryButton\n          type=\"button\"\n          className=\"delete-primary-btn\"\n          onClick={onDelete}\n        >\n          <GoTrash size={20} />\n          Delete\n        </PrimaryButton>\n      </ButtonsWrap>\n    </ModalWindow>\n  );\n};\n\nDeleteModalWindow.propTypes = {\n  title: PropTypes.string,\n  modalText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 8px;\n\n  margin-right: auto;\n  overflow: hidden;\n\n  @media screen and (max-width: 767px) {\n    justify-content: center;\n\n    width: 100%;\n\n    text-align: center;\n  }\n`;\n\nexport const AvatarWrapp = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n\n  width: 60px;\n  height: 60px;\n  border: 1px solid var(--gray-color);\n  border-radius: 50%;\n\n  box-shadow: var(--box-shadow);\n`;\n\nexport const AvatarAlt = styled.span`\n  font-size: 20px;\n  line-height: 1.4;\n  letter-spacing: 0.2px;\n`;\n\nexport const ContactName = styled.p`\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: -0.36px;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const ContactNumber = styled.a`\n  font-weight: 400;\n  text-decoration: none;\n\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  color: currentColor;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n    color: var(--blue-color);\n  }\n`;\n\nexport const ContactWrapp = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-shrink: 0;\n\n  @media screen and (max-width: 767px) {\n    gap: 12px;\n  }\n\n  @media screen and (max-width: 380px) {\n    flex-direction: column;\n  }\n`;\n\nexport const PhoneLink = styled.a`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 36px;\n  height: 36px;\n  border: 1px solid var(--success-color);\n  border-radius: 50%;\n  padding: 8px;\n\n  color: var(--success-color);\n  background-color: transparent;\n\n  transition: color var(--transition-duration) var(--transition-timing-function),\n    background-color var(--transition-duration)\n      var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n    color: var(--white-color);\n    background-color: var(--success-color);\n  }\n`;\n\nexport const BtnsWrapp = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: row;\n    gap: 12px;\n  }\n\n  @media screen and (max-width: 380px) {\n    flex-direction: column;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { GoTrash } from 'react-icons/go';\nimport { MdOutlineEdit } from 'react-icons/md';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { defaultErrorText, linearGradients } from 'helpers/helpers';\nimport { EditContactForm } from 'components/Forms/EditContactForm';\nimport { ModalWindow } from 'components/ModalWindows/ModalWindow';\nimport { DeleteModalWindow } from 'components/ModalWindows/DeleteModalWindow';\nimport {\n  ContactInfo,\n  ContactNumber,\n  ContactName,\n  AvatarWrapp,\n  BtnsWrapp,\n  PhoneLink,\n  ContactWrapp,\n  AvatarAlt,\n} from './Contact.styled';\nimport { Title } from 'components/Section/Section.styled';\nimport { PrimaryButton } from 'components/PrimaryButton/PrimaryButton.styled';\n\nconst body = document.body;\nconst modalVariants = {\n  editContact: 'edit',\n  deleteContact: 'delete',\n};\n\nexport const Contact = ({ contact = {}, ordinalNumber = 0 }) => {\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = (isOpen, variant) => {\n    isOpen ? (body.style.overflow = '') : (body.style.overflow = 'hidden');\n\n    if (variant === modalVariants.editContact) {\n      setEditModalIsOpen(prev => !prev);\n    } else if (variant === modalVariants.deleteContact) {\n      setDeleteModalIsOpen(prev => !prev);\n    }\n  };\n\n  const onDelete = (id, name) => {\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(resp => {\n        toast.remove();\n        toast.success(`${name} deleted from contacts`);\n\n        toggleModal(deleteModalIsOpen, modalVariants.deleteContact);\n      })\n      .catch(error => {\n        toast.remove();\n        toast.error(defaultErrorText);\n      });\n  };\n\n  const { id, name, number } = contact;\n  const numberHref = number.split('-').join('').split(' ').join('');\n  const firstName = name.split(' ')[0];\n  const lastName = name.split(' ')[1] || '';\n  const backgroundGradient =\n    linearGradients[ordinalNumber % linearGradients.length];\n\n  return (\n    <>\n      <AvatarWrapp style={true ? { background: backgroundGradient } : {}}>\n        <AvatarAlt>\n          {firstName.split('')[0].toUpperCase()}\n          {lastName && lastName.split('')[0].toUpperCase()}\n        </AvatarAlt>\n      </AvatarWrapp>\n\n      <ContactInfo>\n        <ContactName>{`${name} `}</ContactName>\n        <ContactNumber href={`tel:${numberHref}`}>{number}</ContactNumber>\n      </ContactInfo>\n\n      <ContactWrapp>\n        <PhoneLink href={`tel:${numberHref}`}>\n          <BsFillTelephoneFill />\n        </PhoneLink>\n\n        <BtnsWrapp>\n          <PrimaryButton\n            type=\"button\"\n            className=\"contact-btn\"\n            onClick={() =>\n              toggleModal(editModalIsOpen, modalVariants.editContact)\n            }\n          >\n            <MdOutlineEdit size={20} />\n            Edit\n          </PrimaryButton>\n\n          <PrimaryButton\n            type=\"button\"\n            className=\"contact-btn delete-primary-btn\"\n            onClick={() =>\n              toggleModal(deleteModalIsOpen, modalVariants.deleteContact)\n            }\n          >\n            <GoTrash size={20} />\n            Delete\n          </PrimaryButton>\n        </BtnsWrapp>\n      </ContactWrapp>\n\n      <ModalWindow\n        closeModal={() =>\n          toggleModal(editModalIsOpen, modalVariants.editContact)\n        }\n        modalIsOpen={editModalIsOpen}\n      >\n        <Title>Edit contact</Title>\n        <EditContactForm\n          contact={contact}\n          closeModal={() =>\n            toggleModal(editModalIsOpen, modalVariants.editContact)\n          }\n        />\n      </ModalWindow>\n\n      <DeleteModalWindow\n        title=\"Delete contact\"\n        modalText={\n          <>\n            Are you sure you want to delete the contact <strong>{name}</strong>?\n          </>\n        }\n        isOpen={deleteModalIsOpen}\n        closeModal={() =>\n          toggleModal(deleteModalIsOpen, modalVariants.deleteContact)\n        }\n        onDelete={() => onDelete(id, name)}\n      />\n    </>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  ordinalNumber: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  transform: scale(1, 1);\n\n  display: flex;\n  align-items: center;\n  gap: 16px;\n\n  border: 2px solid var(--gray-color);\n  border-radius: 8px;\n  padding: 16px 20px;\n\n  box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n\n  transition: transform var(--transition-duration)\n    var(--transition-timing-function);\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  &:is(:hover, :focus) {\n    transform: scale(1.01, 1.05);\n  }\n\n  @media screen and (max-width: 767px) {\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 12px;\n  }\n`;\n\nexport const NoContactsText = styled.p`\n  text-align: center;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { ListItem, NoContactsText } from './ContactsList.styled';\nimport { useVisibleContacts } from 'hooks/useContacts';\n\nexport const ContactsList = () => {\n  const contacts = useVisibleContacts();\n\n  return contacts.length ? (\n    <ul>\n      {contacts.map((contact, idx) => (\n        <ListItem key={contact.id}>\n          <Contact contact={contact} ordinalNumber={idx} />\n        </ListItem>\n      ))}\n    </ul>\n  ) : (\n    <NoContactsText>\n      No contacts found for the entered name or number\n    </NoContactsText>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n\n  width: 100%;\n  height: calc(100vh - 134px);\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: -0.36px;\n`;\n","import { BsEmojiFrown } from 'react-icons/bs';\nimport { Text, Wrapper } from './Error.styled';\n\nexport const Error = () => {\n  return (\n    <Wrapper>\n      <BsEmojiFrown size={64} />\n      <Text>Oops, something went wrong. Try reloading the page.</Text>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NoContactsText = styled.p`\n  text-align: center;\n`;\n\nexport const TotalContacts = styled.p`\n  margin-bottom: 12px;\n\n  font-weight: 700;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { useContacts, useVisibleContacts } from 'hooks/useContacts';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { Section } from 'components/Section/Section';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Error } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport { NoContactsText, TotalContacts } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n  const visibleContacts = useVisibleContacts();\n  const filter = useSelector(selectFilterValue);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n      .unwrap()\n      .catch(error => {\n        toast.remove();\n        toast.error('Oops, something went wrong. Try reloading the page.');\n      });\n  }, [dispatch]);\n\n  return (\n    <main>\n      {!error ? (\n        <Section title=\"Contacts\">\n          {contacts.length > 0 ? (\n            <>\n              <Filter />\n              {!filter && (\n                <TotalContacts>Total contacts: {contacts.length}</TotalContacts>\n              )}\n              {filter && visibleContacts.length > 0 && (\n                <TotalContacts>\n                  {`Total of contacts found for the query: ${visibleContacts.length}`}\n                </TotalContacts>\n              )}\n              <ContactsList />\n            </>\n          ) : (\n            <NoContactsText>No contacts</NoContactsText>\n          )}\n\n          {isLoading && <Loader />}\n        </Section>\n      ) : (\n        <Error />\n      )}\n    </main>\n  );\n};\n\nexport default Contacts;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilterValue } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.includes(filter)\n    );\n  }\n);\n","export const selectFilterValue = state => state.filter.value;\n"],"names":["Label","styled","WrapperInput","StyledInput","Field","NameInputIcon","AiOutlineUser","EmailInputIcon","AiOutlineMail","PasswordInputIcon","RiLockPasswordLine","NumberInputIcon","BsTelephone","Error","Modal","customModalStyles","overlay","backgroundColor","content","top","left","right","bottom","transform","display","flexDirection","justifyContent","width","maxWidth","minHeight","padding","marginRight","boxShadow","ModalWindow","children","closeModal","modalIsOpen","isOpen","onRequestClose","style","contentLabel","onClick","CloseBtn","ButtonsWrap","ModalText","Section","title","Wrapper","Title","useContacts","useSelector","selectContacts","useVisibleContacts","selectVisibleContacts","FilterInput","SearchIcon","BsSearch","ResetBtn","Filter","dispatch","useDispatch","filter","selectFilterValue","useEffect","filterContacts","type","value","placeholder","onChange","evt","currentTarget","trim","closest","control","EditContactForm","contact","contacts","id","name","number","initialValues","onSubmit","values","allContactsExceptEdited","isIncludesContact","editContact","editedContact","unwrap","then","resp","toast","catch","error","defaultErrorText","validationSchema","contactSchema","size","component","className","DeleteModalWindow","modalText","onDelete","ContactInfo","AvatarWrapp","AvatarAlt","ContactName","ContactNumber","ContactWrapp","PhoneLink","BtnsWrapp","body","document","modalVariants","Contact","ordinalNumber","useState","editModalIsOpen","setEditModalIsOpen","deleteModalIsOpen","setDeleteModalIsOpen","toggleModal","variant","overflow","prev","numberHref","split","join","firstName","lastName","backgroundGradient","linearGradients","background","toUpperCase","href","deleteContact","ListItem","NoContactsText","ContactsList","length","map","idx","Text","TotalContacts","visibleContacts","isLoading","selectIsLoading","selectError","fetchContacts","Loader","state","items","createSelector","toLowerCase","includes"],"sourceRoot":""}