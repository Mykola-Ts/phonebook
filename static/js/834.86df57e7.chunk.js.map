{"version":3,"file":"static/js/834.86df57e7.chunk.js","mappings":"mNAGaA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,IAAPD,CAAH,oG,8BCuCxB,EAhC+B,SAAC,GAAiC,IAA/BE,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACvCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACC,EAAA,QAAD,CAAaH,WAAYA,EAAYD,YAAaA,EAAlD,WACE,SAACH,EAAD,CAAaQ,KAAM,GAAIC,MAAO,MAE9B,SAAC,KAAD,UAAW,yCAEX,UAAC,KAAD,YACE,SAAC,IAAD,CAAeC,KAAK,SAASC,QAAS,kBAAMP,GAAN,EAAtC,SAA0D,uBAG1D,SAAC,IAAD,CACEM,KAAK,SACLC,QAAS,WACPP,IACAC,EAAS,YACV,EALH,SAMC,wBAMR,C,mFC9BDO,IAAAA,cAAoB,SAEpB,IAAMC,EAAoB,CACxBC,QAAS,CACPC,gBAAiB,6BAEnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,UAAW,wBACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBf,MAAO,oBACPgB,SAAU,QACVC,UAAW,QACXC,QAAS,YACTC,YAAa,OACbC,UAAW,sBA2Bf,UAvBoB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAU1B,EAA8B,EAA9BA,WAAYD,EAAkB,EAAlBA,YAC3C,OACE,UAAC,IAAD,CACE4B,OAAQ5B,EACR6B,eAAgB5B,EAChB6B,MAAOpB,EACPqB,aAAa,gBAJf,UAMGJ,GAED,SAAC,KAAD,CAAUnB,QAASP,EAAY,aAAW,cAA1C,UACE,SAAC,MAAD,QAIP,C,qIC1CY+B,EAAWlC,EAAAA,GAAAA,OAAH,4hBA2BRmC,EAAcnC,EAAAA,GAAAA,IAAH,uSAmBXoC,EAAYpC,EAAAA,GAAAA,EAAH,4F","sources":["components/AddContactSuccessModal/AddContactSuccessModal.styled.js","components/AddContactSuccessModal/AddContactSuccessModal.jsx","components/ModalWindows/ModalWindow.jsx","components/ModalWindows/ModalWindow.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { MdOutlineDoneOutline } from 'react-icons/md';\n\nexport const SuccessIcon = styled(MdOutlineDoneOutline)`\n  margin: 0 auto;\n  margin-bottom: 12px;\n\n  fill: var(--success-color);\n`;\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport ModalWindow from 'components/ModalWindows/ModalWindow';\nimport { SuccessIcon } from './AddContactSuccessModal.styled';\nimport { PrimaryButton } from 'components/PrimaryButton/PrimaryButton.styled';\nimport {\n  ButtonsWrap,\n  ModalText,\n} from 'components/ModalWindows/ModalWindow.styled';\n\nconst AddContactSuccessModal = ({ modalIsOpen, closeModal }) => {\n  const navigate = useNavigate();\n\n  return (\n    <ModalWindow closeModal={closeModal} modalIsOpen={modalIsOpen}>\n      <SuccessIcon size={80} width={0.5} />\n\n      <ModalText>The contact was added successfully!</ModalText>\n\n      <ButtonsWrap>\n        <PrimaryButton type=\"button\" onClick={() => closeModal()}>\n          Stay on this page\n        </PrimaryButton>\n        <PrimaryButton\n          type=\"button\"\n          onClick={() => {\n            closeModal();\n            navigate('/contacts');\n          }}\n        >\n          Go to Contacts\n        </PrimaryButton>\n      </ButtonsWrap>\n    </ModalWindow>\n  );\n};\n\nAddContactSuccessModal.propTypes = {\n  modalIsOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default AddContactSuccessModal;\n","import Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { CloseBtn } from './ModalWindow.styled';\n\nModal.setAppElement('#root');\n\nconst customModalStyles = {\n  overlay: {\n    backgroundColor: 'rgba(255, 255, 255, 0.85)',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    width: 'calc(100% - 30px)',\n    maxWidth: '600px',\n    minHeight: '160px',\n    padding: '32px 20px',\n    marginRight: '-50%',\n    boxShadow: 'var(--box-shadow)',\n  },\n};\n\nconst ModalWindow = ({ children, closeModal, modalIsOpen }) => {\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customModalStyles}\n      contentLabel=\"Contact Modal\"\n    >\n      {children}\n\n      <CloseBtn onClick={closeModal} aria-label=\"Close modal\">\n        <AiOutlineClose />\n      </CloseBtn>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  closeModal: PropTypes.func.isRequired,\n  modalIsOpen: PropTypes.bool.isRequired,\n};\n\nexport default ModalWindow;\n","import styled from 'styled-components';\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  transform: scale(1);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  border-radius: 50px;\n  padding: 0;\n\n  background-color: transparent;\n\n  transition: transform var(--transition-duration)\n      var(--transition-timing-function),\n    color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n    transform: scale(1.15);\n\n    color: var(--blue-color);\n  }\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 24px;\n\n  @media screen and (max-width: 439px) {\n    flex-direction: column;\n    gap: 12px;\n\n    width: fit-content;\n    margin: 0 auto;\n\n    & button {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ModalText = styled.p`\n  margin-bottom: 24px;\n\n  text-align: center;\n  font-size: 18px;\n`;\n"],"names":["SuccessIcon","styled","MdOutlineDoneOutline","modalIsOpen","closeModal","navigate","useNavigate","ModalWindow","size","width","type","onClick","Modal","customModalStyles","overlay","backgroundColor","content","top","left","right","bottom","transform","display","flexDirection","justifyContent","maxWidth","minHeight","padding","marginRight","boxShadow","children","isOpen","onRequestClose","style","contentLabel","CloseBtn","ButtonsWrap","ModalText"],"sourceRoot":""}